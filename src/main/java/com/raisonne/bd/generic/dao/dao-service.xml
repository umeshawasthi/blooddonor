<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Declaring hibernate session factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
	</bean>

	<context:component-scan base-package="com.raisonne.bd" />

	<!-- Injecting session factory to the generic DAO class.All DAO implimentation 
		must inherit this Abstract class to avoid multiple session injection -->
	<bean id="genericDao" class="com.raisonne.bd.generic.dao.impl.GenericDAOImpl"
		abstract="true">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>


<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
  
  <tx:advice id="txAdvice" transaction-manager="hibernateTransactionManager">
	<tx:attributes>
   <!--  all methods starting with 'save,update,delete' are read-only -->
    <tx:method name="save*" read-only="false" />
    <tx:method name="update*" read-only="false" />
    <tx:method name="delete*" read-only="false" />
    <tx:method name="load*" read-only="true" />
    <!-- other methods use the default transaction settings (see below) -->
    <tx:method name="*"/>
  </tx:attributes>
  </tx:advice>
  
  <!-- ensure that the above transactional advice runs for any execution
    of an operation defined by the DonorService interface -->
  <aop:config>
  <aop:pointcut id="donorServiceOperation" expression="execution(* com.raisonne.bd.service.*.*Service*.*(..))"/>
  <aop:advisor advice-ref="txAdvice" pointcut-ref="donorServiceOperation"/>
  </aop:config>
	
	


	<!--Applying Spring annotated Transaction -->
	<!-- <tx:annotation-driven transaction-manager="hibernateTransactionManager" /> -->
	
	
	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

</beans>